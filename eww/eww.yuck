(defpoll time :interval "5s"
  :initial `date + '{"hour": "%H", "min": "%M"}'`
  `date + '{"hour": "%H", "min": "%M"}'`)

(defpoll net :interval "100s"
  :initial `nmcli -t -f SIGNAL,ACTIVE device wifi \
    | awk -F':' '{if($2=="yes")print$1}'`
  `nmcli -t -f SIGNAL,ACTIVE device wifi \
    | awk -F':' '{if($2=="yes")print$1}'`)

(defpoll volume :interval "10s"
  `amixer -D pulse sget Master | awk -F '[^0-9]+' '/Left:/{print $3}'`)

(defwidget _pwr_buttons [shutdown reboot logout ?spacing]
  (box :class "powermenu-btns"
       :vexpand true :hexpand true
       :valign "end" :halign "end"
       :space-evenly false
       :spacing spacing
    (button :onclick shutdown "Û∞ê•")
    (button :onclick reboot "Û∞ëì")
    (button :onclick logout "Û∞çÉ")))

(defwidget _network []
  (label :text {net == "" ? "Û∞£Ω" : 
                net < 26 ? "Û∞£¥" :
                net < 51 ? "Û∞£∂" :
                net < 76 ? "Û∞£∏" : "Û∞£∫"}))

(defwidget _battery [battery status]
  (label :text {status == 'Discharging' ? 
                battery < 15 ? "Û∞Å∫" :
                battery < 25 ? "Û∞Åª" :
                battery < 35 ? "Û∞Åº" :
                battery < 45 ? "Û∞ÅΩ" :
                battery < 55 ? "Û∞Åæ" :
                battery < 65 ? "Û∞Åø" :
                battery < 75 ? "Û∞ÇÄ" :
                  battery < 85 ? "Û∞ÇÅ" :
                    battery < 95 ? "Û∞ÇÇ" : "Û∞Åπ"
                : 
                battery < 15 ? "Û∞¢ú" :
                battery < 25 ? "Û∞ÇÜ" :
                battery < 35 ? "Û∞Çá" :
                battery < 45 ? "Û∞Çà" :
                battery < 55 ? "Û∞¢ù" :
                battery < 65 ? "Û∞Çâ" :
                battery < 75 ? "Û∞¢û" :
                  battery < 85 ? "Û∞Çä" :
                    battery < 95 ? "Û∞Çã" : "Û∞ÇÖ"}))

(defwidget _time [?spacing]
  (box :class "roundbox text-lg" :space-evenly false :spacing spacing
    (label :text {formattime(EWW_TIME, "%I:%M %p", "America/Chicago")})
    (button :onclick "eww open calendar" "Ó™∞")))
  

(defwidget powermenu_layout []
  (box :space-evenly false
       :orientation "vertical"
    (box :valign "start"
         :space-evenly false
      (_time :spacing 25)
      (box :class "roundbox text-lg"
           :halign "end"
           :hexpand true
           :spacing 25
        (_network)
        (_battery :battery {EWW_BATTERY.BAT0.capacity}
                  :status {EWW_BATTERY.BAT0.status})
        (button :onclick "eww close powermenu" "Û∞Öñ")))
    (box :valign "end"
         :space-evenly false
         :vexpand true
      (box :class "roundbox text-lg"
           :halign "end"
           :hexpand true
        (_pwr_buttons :shutdown "poweroff"
                      :reboot "reboot"
                      :logout "loginctl kill-session self"
                      :spacing 25)))))
  

(defwindow powermenu
  :class "powermenu"
  :monitor 0 ;; Optional for X11
  :stacking "fg"
  :windowtype "normal"
  :wm-ignore true
  :geometry (geometry
              :width "100%"
              :height "100%")
  (powermenu_layout))

(defwindow calendarmenu
  :monitor 0
  (calendar :class "calendar" :show-day-names true))

(defwidget bar []
  (centerbox :orientation "h"
    (workspaces)
    (tray)))
    

(defwidget tray []
  (box :orientation "h" :halign "end"
    (metric :label "üîä"
            :value volume
            :onchange "amixer -D pulse sset Master {}%")))
